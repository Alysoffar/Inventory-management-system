version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - inventory_network
    depends_on:
      - database
      - redis

  webserver:
    image: nginx:alpine
    container_name: inventory_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - inventory_network
    depends_on:
      - app

  database:
    image: mysql:8.0
    container_name: inventory_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - inventory_network

  redis:
    image: redis:alpine
    container_name: inventory_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - inventory_network

  mailhog:
    image: mailhog/mailhog
    container_name: inventory_mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - inventory_network

networks:
  inventory_network:
    driver: bridge

volumes:
  dbdata:
    driver: local
